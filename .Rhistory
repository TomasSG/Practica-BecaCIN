datos <- datos %>% mutate(tiene_obesidad = bmi > 25
datos <- datos %>% mutate(tiene_obesidad = bmi > 25)
datos <- datos %>% mutate(tiene_obesidad = bmi > 25)
ggplot(datos, aes(tiene_obesidad, edad, color = tiene_obesidad)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(fuma, n_hijos, color = fuma)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(fuma, edad, color = fuma)) +
geom_boxplot() +
theme_gdocs()
datos <- datos %>% mutate(tiene_obesidad = bmi > 30)
datos <- read_excel("./data/datasets_376751_731448_london_merged.csv")
vec_aux <- names(datos)
for(i in seq_along(vec_aux)) {
names(datos)[i] <- tolower(str_replace(vec_aux[i], " ", "_"))
}
datos <- read.csv("./data/datasets_376751_731448_london_merged.csv")
datos$is_weekend <- as.factor(datos$is_weekend)
ggplot(datos, aes(is_weekend, color = is_weekend)) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(is_weekend, fill = is_weekend)) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(is_weekend, y = ..count.. / sum(..count..), fill = is_weekend)) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(is_weekend, cnt, fill = is_weekend)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(is_weekend, y = ..count.. / sum(..count..), color = is_weekend)) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
g1 <- ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs()
g1 + coord_cartesian(ylim = c(0, 2000))
datos <- datos %>% mutate(esta_despejado = wather_cord == 1)
datos <- datos %>% mutate(esta_despejado = weather_cord == 1)
datos <- datos %>% mutate(esta_despejado = weather_cor == 1)
datos <- datos %>% mutate(esta_despejado = weather_code == 1)
ggplot(datos, aes(weather_code, cnt, color = weather_code)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(esta_despejado, cnt, color = esta_despejado)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(esta_despejado, cnt, color = esta_despejado)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
datos <- datos %>% mutate(esta_despejado = weather_code <= 1)
ggplot(datos, aes(esta_despejado, cnt, color = esta_despejado)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
datos <- datos %>% mutate(esta_despejado = weather_code <= 4)
ggplot(datos, aes(esta_despejado, cnt, color = esta_despejado)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
datos <- datos %>% mutate(esta_lindo = weather_code < 7)
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
datos <- datos %>% mutate(esta_lindo = weather_code < 5)
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
g1 + coord_cartesian(ylim = c(0, 2000))
g1 <- ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
g1 + coord_cartesian(ylim = c(0, 2000))
modelo <- glm(esta_lindo ~ cnt, datos, family = "binomial")
summary(model)
summary(modelo)
summary(modelo)
e^modelo$coefficients[2]
modelo$coefficients[2]
exp(modelo$coefficients[2])
nuevos_puntos <- seq(min(datos$cnt), max(datos$cnt), 1)
nuevos_puntos
modelo$fitted.values
predicciones_logit <- predict(modelo, data.frame("cnt" = nuevos_puntos))
predicciones_logit
valores_logit <- exp(predicciones_logit) / (1 + exp(predicciones_logit))
valores_logit
# Ahora, calculamos las provavilidades
valores_logit <- exp(predicciones_logit) / (1 + exp(predicciones_logit))
# Ahora, calculamos las provavilidades
valores <- exp(predicciones_logit) / (1 + exp(predicciones_logit))
# Ahora, calculamos las provavilidades
predicciones <- exp(predicciones_logit) / (1 + exp(predicciones_logit))
df_aux <- data.frame(predicciones = predicciones, cnt = datos$cnt)
df_aux
df_aux <- data.frame(predicciones = predicciones, cnt = datos$cnt)
df_aux <- data.frame("predicciones" = predicciones, "cnt" = datos$cnt)
df_aux <- data.frame(predicciones = predicciones, cnt = nuevos_puntos)
df_aux
ggplot(df_aux, aes(cnt, predicciones))
ggplot(df_aux, aes(cnt, predicciones)) +
geom_point() +
theme_gdocs()
df_aux <- data.frame(predicciones = modelo$fitted.values, cnt = datos$cnt)
ggplot(df_aux, aes(cnt, predicciones)) +
geom_point() +
theme_gdocs()
# Graficamos las probabilidades
df_aux <- data.frame(predicciones = predicciones, cnt = nuevos_puntos)
ggplot(datos, aes(cnt, esta_lindo)) +
geom_point() +
theme_gdocs()
datos$esta_lindo <- as.numeric(datos$esta_lindo)
datos$esta_lindo
g1 <- ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
# Hacemos un zoom para pareciar las diferencias
g1 + coord_cartesian(ylim = c(0, 2000))
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(ifelse(esta_lindo = weather_code < 5, 1, 0))
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(esta_lindo = ifelse(weather_code < 5, 1, 0))
# Sera diferente la cantidad de bicicletas usadas en los findes?
g1 <- ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs()
# Con zoom
g1 + coord_cartesian(ylim = c(0, 2000))
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(esta_lindo = weather_code < 5)
# Sera diferente la cantidad de bicicletas usadas en los findes?
g1 <- ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs()
# Con zoom
g1 + coord_cartesian(ylim = c(0, 2000))
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(esta_lindo = weather_code < 5)
# Sera diferente la cantidad de bicicletas usadas en los findes?
g1 <- ggplot(datos, aes(is_weekend, cnt, color = is_weekend)) +
geom_boxplot() +
theme_gdocs()
# Con zoom
g1 + coord_cartesian(ylim = c(0, 2000))
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(esta_lindo = weather_code < 5)
# Sera diferente la cantidad de bicicletas usadas en días lindos
ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs() +
coord_cartesian(ylim = c(0, 2000))
g1 <- ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
# Hacemos un zoom para pareciar las diferencias
g1 + coord_cartesian(ylim = c(0, 2000))
modelo <- glm(esta_lindo ~ cnt, datos, family = "binomial")
summary(modelo)
# Primero generamos nuevos puntos
nuevos_puntos <- seq(min(datos$cnt), max(datos$cnt), 1)
# Ahora, predecimos los valores logits para dichos puntos (logit = b0 + b1x)
predicciones_logit <- predict(modelo, data.frame("cnt" = nuevos_puntos))
# Ahora, calculamos las provavilidades
predicciones <- exp(predicciones_logit) / (1 + exp(predicciones_logit))
# Graficamos las probabilidades
df_aux <- data.frame(predicciones = predicciones, cnt = nuevos_puntos)
ggplot(datos, aes(cnt, as.numeric(esta_lindo))) +
geom_point() +
theme_gdocs()
ggplot(datos, aes(cnt, as.numeric(esta_lindo))) +
geom_point() +
geom_line(df_aux, aes(y = predicciones)) +
theme_gdocs()
ggplot(datos, aes(cnt, as.numeric(esta_lindo))) +
geom_point() +
geom_line(data = df_aux, mapping = aes(y = predicciones)) +
theme_gdocs()
g1 <- ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
# Hacemos un zoom para pareciar las diferencias
g1 + coord_cartesian(ylim = c(0, 2000))
modelo <- glm(esta_lindo ~ cnt, datos, family = "binomial")
summary(modelo)
df_aux <- data.frame(predicciones = modelo$fitted.values, cnt = datos$cnt)
ggplot(datos, aes(cnt, as.numeric(esta_lindo))) +
geom_point() +
geom_line(data = df_aux, mapping = aes(y = predicciones)) +
theme_gdocs()
modelo <- glm(esta_lindo ~ cnt, data =  datos, family = "binomial")
summary(modelo)
ggplot(df_aux, aes(cnt, predicciones)) +
geom_line() +
theme_gdocs()
curve(predict(modelo, data.frame("cnt" = nuevos_puntos)), type = "response")
predict(modelo, data.frame("cnt" = nuevos_puntos))
curve(predict(modelo, data.frame("cnt" = nuevos_puntos)), type = "response")
modelo$fitted.values
df_aux <- data.frame(predicciones = modelo$fitted.values, cnt = datos$cnt)
ggplot(df_aux, aes(cnt, predicciones)) +
geom_line() +
theme_gdocs()
# Ahora, predecimos los valores logits para dichos puntos (logit = b0 + b1x)
predicciones <- predict(modelo, data.frame("cnt" = nuevos_puntos), type = "response")
predicciones
# Graficamos las probabilidades
df_aux <- data.frame(predicciones = predicciones, cnt = nuevos_puntos)
ggplot(df_aux, aes(cnt, predicciones)) +
geom_line() +
theme_gdocs()
# Ahora, predecimos las probabilidades
predicciones <- predict(modelo, data.frame("cnt" = nuevos_puntos), type = "response")
summary(datos)
ggplot(datos, aes(cnt)) +
geom_histogram() +
theme_gdocs()
ggplot(datos, aes(cnt)) +
geom_histogram() +
theme_gdocs() +
facet_grid(. ~ esta_lindo)
matricula <- as.factor(c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1,
0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0,
1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1,
1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 0, 0, 1, 1))
matematicas <- c(41, 53, 54, 47, 57, 51, 42, 45, 54, 52, 51, 51, 71, 57, 50, 43,
51, 60, 62, 57, 35, 75, 45, 57, 45, 46, 66, 57, 49, 49, 57, 64,
63, 57, 50, 58, 75, 68, 44, 40, 41, 62, 57, 43, 48, 63, 39, 70,
63, 59, 61, 38, 61, 49, 73, 44, 42, 39, 55, 52, 45, 61, 39, 41,
50, 40, 60, 47, 59, 49, 46, 58, 71, 58, 46, 43, 54, 56, 46, 54,
57, 54, 71, 48, 40, 64, 51, 39, 40, 61, 66, 49, 65, 52, 46, 61,
72, 71, 40, 69, 64, 56, 49, 54, 53, 66, 67, 40, 46, 69, 40, 41,
57, 58, 57, 37, 55, 62, 64, 40, 50, 46, 53, 52, 45, 56, 45, 54,
56, 41, 54, 72, 56, 47, 49, 60, 54, 55, 33, 49, 43, 50, 52, 48,
58, 43, 41, 43, 46, 44, 43, 61, 40, 49, 56, 61, 50, 51, 42, 67,
53, 50, 51, 72, 48, 40, 53, 39, 63, 51, 45, 39, 42, 62, 44, 65,
63, 54, 45, 60, 49, 48, 57, 55, 66, 64, 55, 42, 56, 53, 41, 42,
53, 42, 60, 52, 38, 57, 58, 65)
datos <- data.frame(matricula, matematicas)
ggplto(datos, aes(matematicas, fill = matricula))+
geom_histogram() +
facet_wrap(~ matricula)
ggplot(datos, aes(matematicas, fill = matricula))+
geom_histogram() +
facet_wrap(~ matricula)
ggplot(datos, aes(matematicas, fill = matricula))+
geom_histogram(bins = 10) +
facet_wrap(~ matricula)
datos <- read.csv("./data/datasets_376751_731448_london_merged.csv")
# Tratamos a is_weekend como un factor
datos$is_weekend <- as.factor(datos$is_weekend)
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(esta_lindo = weather_code < 5)
ggplot(datos, aes(cnt, color = esta_lindo)) +
geom_histogram() +
theme_gdocs() +
facet_grid(. ~ esta_lindo)
ggplot(datos, aes(cnt, fill = esta_lindo)) +
geom_histogram(bins = 15) +
theme_gdocs() +
facet_grid(. ~ esta_lindo)
ggplot(datos, aes(cnt, color = esta_lindo)) +
geom_histogram(bins = 15, fill = "white") +
theme_gdocs() +
facet_grid(. ~ esta_lindo)
# Ahora, predecimos las probabilidades
predicciones <- predict(modelo, data.frame("cnt" = nuevos_puntos), type = "response")
# Graficamos las probabilidades
df_aux <- data.frame(predicciones = predicciones, cnt = nuevos_puntos)
ggplot(df_aux, aes(cnt, predicciones)) +
geom_line() +
theme_gdocs()
anova(modelo, test = "Chisq")
ggplot(datos, aes(cnt, esta_lindo ,color = esta_lindo)) +
geom_point() +
theme_gdocs()
ggplot(datos, aes(cnt, is_weekend,color = is_weekend)) +
geom_point() +
theme_gdocs()
library(lubridate)
# Obtenemos el día de semana a partir de la fecha
is.Date(datos$timestamp)
library(lubridate)
# Obtenemos el día de semana a partir de la fecha
datos$timestamp <- as.Date(datos$timestamp)
wday(datos$timestamp)
wday(datos$timestamp, label = TRUE)
datos$dia <- wday(datos$timestamp, label = TRUE)
datos$dia
levels(datos$dia)
datos$dia <- factor(datos$dia,
levels = c("lun\\.", "mar\\.", "mié\\.",
"jue\\.", "vie\\.", "sáb\\.", "dom\\."),
labels = c("Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"))
datos$dia
ggplot(datos, aes(dia), y = ..count.. / sum(..count..)) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(dia), y = ..count.. / sum(..count..)) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(dia, y = ..count.. / sum(..count..))) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(cnt, is_holiday,color = is_holiday)) +
geom_point() +
theme_gdocs()
ggplot(datos, aes(cnt, is_holiday,color = is_holiday)) +
geom_point() +
theme_gdocs()
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
theme_gdocs()
datos$is_holiday <- as.factor(datos$is_holiday)
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
theme_gdocs()
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
geom_jitter()
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
geom_jitter() +
theme_gdocs()
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
geom_jitter(width = .1) +
theme_gdocs()
datos %>% group_by(dia) %>% summarise(n = n())
nrow(datos)
ggplot(datos, aes(dia, y = ..count.. / sum(..count..))) +
geom_bar() +
theme_gdocs() +
facet_grid(. ~ is_holiday)
ggplot(datos, aes(is_holiday, cnt, color = is_holiday)) +
geom_boxplot() +
geom_jitter(width = .1) +
theme_gdocs()
anova(modelo, test = "Chisq")
ggplot(datos, aes(season, y = ..count.. / sum(..count..))) +
geom_bar() +
theme_gdocs() +
facet_grid(. ~ is_holiday)
ggplot(datos, aes(season, y = ..count.. / sum(..count..))) +
geom_bar() +
theme_gdocs() #+
ggplot(datos, aes(season, y = ..count.. / sum(..count..))) +
geom_bar() +
theme_gdocs() +
facet_grid(. ~ is_holiday)
ggplot(datos, aes(season, y = ..count.. / sum(..count..))) +
geom_bar() +
theme_gdocs()
ggplot(datos, aes(season, cnt, color = season)) +
geom_boxplot() +
geom_jitter(width = .1) +
theme_gdocs()
datos$season <- as.factor(datos$season)
ggplot(datos, aes(season, cnt, color = season)) +
geom_boxplot() +
geom_jitter(width = .1) +
theme_gdocs()
g1 <- ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
datos %>% group_by(esta_lindo) %>% summarise(sum(cnt))
datos %>% group_by(esta_lindo) %>% summarise(sum(cnt), mean(cnt))
g1 <- ggplot(datos, aes(esta_lindo, cnt, color = esta_lindo)) +
geom_boxplot() +
theme_gdocs()
g1
# Hacemos un zoom para pareciar las diferencias
g1 + coord_cartesian(ylim = c(0, 2000))
datos %>% group_by(esta_lindo) %>% summarise(sum(cnt), mean(cnt), median(cnt))
datos %>% group_by(esta_lindo) %>% summarise(sum(cnt), median(cnt))
datos %>% filter(is_holiday == 1) %>% group_by(dia) %>% summarise(sum(cnt))
datos %>% filter(is_holiday == 1) %>% group_by(dia) %>% summarise(sum(cnt))
datos %>% filter(is_holiday == 1) %>%
ggplopt(aes(cnt, dia))+
geom_boxplot()
datos %>% filter(is_holiday == 1) %>%
ggplot(aes(cnt, dia))+
geom_boxplot()
datos %>% filter(is_holiday == 1) %>%
ggplot(aes(dia, cnt))+
geom_boxplot()
datos %>% filter(is_holiday == 1) %>%
ggplot(aes(dia, cnt))+
geom_boxplot() +
geom_jitter()
datos %>% group_by(dia) %>% summarise(cumsim(cnt))
datos %>% group_by(dia) %>% summarise(summ(cnt))
datos %>% group_by(dia) %>% summarise(sum(cnt))
# Obtenemos la hora
hour(datos$timestamp)
# Obtenemos la hora
datos$timestamp
datos <- read.csv("./data/datasets_376751_731448_london_merged.csv")
# Cambiamos algunas variables a factores
datos$is_weekend <- as.factor(datos$is_weekend)
datos$is_holiday <- as.factor(datos$is_holiday)
datos$season <- as.factor(datos$season)
# Indicador de que el día esta lindo (los códigos menores a 5 representan eso)
datos <- datos %>% mutate(esta_lindo = weather_code < 5)
# Obtenemos el día de semana a partir de la fecha
datos$dia <- wday(as.Date(datos$timestamp), label = TRUE)
datos$dia <- factor(datos$dia,
levels = c("lun\\.", "mar\\.", "mié\\.",
"jue\\.", "vie\\.", "sáb\\.", "dom\\."),
labels = c("Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"))
datos$dia
# Obtenemos la hora
datos$timestamp
# Obtenemos la hora
as_datetime(datos$timestamp)
# Obtenemos la hora
as_datetime(datos$timestamp)
# Obtenemos la hora
as_datetime(datos$timestamp)$hour
# Obtenemos la hora
as_datetime(datos$timestamp)[1]$hour
# Obtenemos la hora
hour(as_datetime(datos$timestamp, formate = ""))
# Obtenemos la hora
hour(as_datetime(datos$timestamp))
# Obtenemos la hora
datos <- datos %>% mutate(hora = hour(as_datetime(datos$timestamp)))
datos %>% group_by(hora) %>% summarise(sum(cnt))
datos %>% group_by(hora) %>% summarise(sum(cnt)) %>%
ggplot(aes(hora)) +
geom_bar(stat = "identity")
datos %>% group_by(hora) %>% summarise(cant = sum(cnt)) %>%
ggplot(aes(hora, cant)) +
geom_bar(stat = "identity")
datos %>% group_by(hora) %>% summarise(cant_rel = sum(cnt) / cumsum(cant)) %>%
ggplot(aes(hora, cant)) +
geom_bar(stat = "identity")
datos %>% group_by(hora) %>% summarise(cant_rel = sum(cnt) / cumsum(cnt)) %>%
ggplot(aes(hora, cant)) +
geom_bar(stat = "identity")
datos %>% group_by(hora) %>% summarise(cant_rel = sum(cnt) / cumsum(cnt)) %>%
ggplot(aes(hora, cant_rel)) +
geom_bar(stat = "identity")
datos %>% group_by(hora) %>% summarise(cant_rel = sum(cnt) / cumsum(cnt))
datos %>% group_by(hora) %>% summarise(cant_rel = sum(cnt))
datos %>% group_by(hora) %>% summarise(cant_rel = sum(cnt)) %>%
ggplot(aes(hora, cant_rel)) +
geom_bar(stat = "identity")
datos %>% group_by(hora) %>% summarise(cant = sum(cnt)) %>%
ggplot(aes(hora, cant)) +
geom_bar(stat = "identity")
datos$hora == 9
datos %>% mutate(es_pico = (hora >= 6 && hora <= 10) || (hora >= 17 && hora <= 21))
# Tomamos las horas pico son 6 a 10 y 17 a 21
datos <- datos %>% mutate(es_pico = (hora >= 6 && hora <= 10) || (hora >= 17 && hora <= 21))
# Tomamos las horas pico son 6 a 10 y 17 a 21
datos <- datos %>% mutate(es_pico = ((hora >= 6 && hora <= 10) || (hora >= 17 && hora <= 21)))
# Tomamos las horas pico son 6 a 10 y 17 a 21
datos <- datos %>% mutate(es_pico = ((hora >= 6 & hora <= 10) | (hora >= 17 & hora <= 21)))
ggplot(datos, aes(es_pico, cnt, color = es_pico)) %>%
geom_boxplot() +
geom_jitter(width = .1)
ggplot(datos, aes(es_pico, cnt, color = es_pico)) +
geom_boxplot() +
geom_jitter(width = .1)
datos %>% group_by(hora) %>% summarise(sum(cnt))
View(datos %>% group_by(hora) %>% summarise(sum(cnt)))
View(datos %>% group_by(hora) %>% summarise(sum(cnt)) %>% order_by(sum(cnt)))
View(datos %>% group_by(hora) %>% summarise(cant = sum(cnt)) %>% order_by(cant))
View(datos %>% group_by(hora) %>% summarise(cant = sum(cnt)) %>% arrange(cant))
ggplot(datos, aes(cnt, es_pico, color = es_pico)) +
geom_point()
