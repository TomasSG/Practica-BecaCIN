xlab("Valores ajustados") +
ggtitle("Análisis de outliers") +
theme(plot.title = element_text(color = "black", hjust = .5),
text = element_text(family = "Webdings"))
ggplot(datos, aes(valores_ajustados, abs(s_residuos))) +
geom_point() +
geom_point(data = datos[abs(datos$s_residuos) > 3,], color = "firebrick") +
geom_hline(yintercept = 3, linetype = "dashed") +
theme_gdocs() +
ylab("Residuos studintized") +
xlab("Valores ajustados") +
ggtitle("Análisis de outliers") +
theme(plot.title = element_text(color = "black", hjust = .5),
text = element_text(family = "Vivaldi"))
ggplot(datos, aes(valores_ajustados, abs(s_residuos))) +
geom_point() +
geom_point(data = datos[abs(datos$s_residuos) > 3,], color = "firebrick") +
geom_hline(yintercept = 3, linetype = "dashed") +
theme_gdocs() +
ylab("Residuos studintized") +
xlab("Valores ajustados") +
ggtitle("Análisis de outliers") +
theme(plot.title = element_text(color = "black", hjust = .5),
text = element_text(family = "Tw Cen MT"))
ggplot(datos, aes(valores_ajustados, abs(s_residuos))) +
geom_point(size = 1.5) +
geom_point(data = datos[abs(datos$s_residuos) > 3,], color = "firebrick") +
geom_hline(yintercept = 3, linetype = "dashed") +
theme_gdocs() +
ylab("Residuos studintized") +
xlab("Valores ajustados") +
ggtitle("Análisis de outliers") +
theme(plot.title = element_text(color = "black", hjust = .5),
text = element_text(family = "Tw Cen MT"))
summary(influence.measures(modelo))
summary(influence.measures(modelo))
View(summary(influence.measures(modelo)))
nrow(datos)
modelo$terms
modelo$call
modelo$coefficients
str(modelo$coefficients)
umbral_hat <- 2.5 * length(modelo$coefficients)  / nrow(datos)
umbral_hat
aux <- summary(influence.measures(modelo))
aux <- summary(influence.measures(modelo))
aux %>%
select(hat > umbral_hat)
aux %>%
filter(hat > umbral_hat)
aux %>%
filter(hat > umbral_hat)
str(aux)
aux <- data.frame(summary(influence.measures(modelo)))
aux
aux <- data.frame(summary(influence.measures(modelo)))
aux %>%
filter(hat > umbral_hat)
influencePlot(modelo)
datos[-c("California", "Nevada")]
datos[-c("California", "Nevada"),]
datos[-c("California", "Nevada"),]
datos[-c("California", "Nevada")]
View(datos)
datos[c("California", "Nevada"),]
datos[-c("California", "Nevada"),]
datos[-c(1, 5),]
which.names(c("California", "Nevada"))
which.names(c("California", "Nevada"), datos)
indices <- which.names(c("California", "Nevada"), datos)
datos[-indices,]
lm(esp_vida ~ habitantes + asesinatos + universitarios +
heladas , datos[-indices,])
modelo_aux <- lm(esp_vida ~ habitantes + asesinatos + universitarios +
heladas , datos[-indices,])
summary(modelo_aux)
summary(modelo)
summary(modelo_aux)
step(modelo_aux, direction = "both", trace = TRUE)
x <- rnorm(100, 0.001)
y <- rnorm(100, 0)
x <- rnorm(100, 0.001)
y <- rnorm(100, 0)
t.test(x, y)
t.test(x, y, mu = 0)
x <- rnorm(1000, 0.001)
y <- rnorm(1000, 0)
t.test(x, y, mu = 0)
x <- rnorm(1000, 0.0001)
y <- rnorm(1000, 0)
t.test(x, y, mu = 0)
x <- rnorm(1000, 0.001)
y <- rnorm(1000, 0)
t.test(x, y, mu = 0)
x <- rnorm(10000, 0.001)
y <- rnorm(10000, 0)
t.test(x, y, mu = 0)
x <- rnorm(100000, 0.001)
y <- rnorm(100000, 0)
t.test(x, y, mu = 0)
x <- rnorm(100000, 0.0001)
y <- rnorm(100000, 0)
t.test(x, y, mu = 0)
y <- rnorm(10000, 0)
x <- rnorm(10000, 0.0001)
y <- rnorm(10000, 0)
t.test(x, y, mu = 0)
t.test(x - y, mu = 0)
x <- rnorm(10000, 0.0001)
y <- rnorm(10000, 0)
t.test(x - y, mu = 0)
x <- rnorm(100000, 0.0001)
y <- rnorm(100000, 0)
t.test(x - y, mu = 0)
x <- rnorm(100000, 0.0001)
y <- rnorm(100000, 0)
t.test(x, y)
t.test(x, y)
t.test(x, y)
t.test(x, y)
x <- rnorm(100000, 0.0001)
y <- rnorm(100000, 0)
t.test(x, y)
x <- rnorm(100000, 0.0001)
y <- rnorm(100000, 0)
t.test(x, y)
x <- rnorm(100000, 0.0001)
y <- rnorm(100000, 0)
t.test(x, y)
x <- rnorm(1000, 0.1)
y <- rnorm(1000, 0)
t.test(x, y)
x <- rnorm(1000, 0.01)
y <- rnorm(1000, 0)
t.test(x, y)
t.test(x, y)
x <- rnorm(10000, 0.01)
y <- rnorm(10000, 0)
t.test(x, y)
x <- rnorm(10000, 0.01)
y <- rnorm(10000, 0)
t.test(x, y)
x <- rnorm(10000, 0.01)
y <- rnorm(10000, 0)
t.test(x, y)
x <- rnorm(10000, 0.01)
y <- rnorm(10000, 0)
t.test(x, y)
x <- rnorm(10000000, 0.01)
y <- rnorm(10000000, 0)
t.test(x, y)
t.test(x, y)
x <- rnorm(10000000, 0.01)
y <- rnorm(10000000, 0)
t.test(x, y)
x <- rnorm(100, 0.01)
y <- rnorm(100, 0)
t.test(x, y)
x <- rnorm(100, 0.01)
y <- rnorm(100, 0)
t.test(x, y)
x <- rnorm(100, 0.01)
y <- rnorm(100, 0)
t.test(x, y)
x <- rnorm(100, 0.01)
y <- rnorm(100, 0)
t.test(x, y)
# H0: Ux - Uy = 0
# H1: Ux - Uy != 0
{
x <- rnorm(100, 0.01)
y <- rnorm(100, 0)
t.test(x, y)
}
# H0: Ux - Uy = 0
# H1: Ux - Uy != 0
{
x <- rnorm(100, 0.01)
y <- rnorm(100, 0)
t.test(x, y)
}
# H0: Ux - Uy = 0
# H1: Ux - Uy != 0
{
x <- rnorm(10000000, 0.01)
y <- rnorm(10000000, 0)
t.test(x, y)
}
t.test(x, mu = 0)
x <- rnorm(1000000, 0.01)
# H0: Ux - Uy = 0
# H1: Ux - Uy != 0
{
x <- rnorm(1000000, 0.01)
t.test(x, mu = 0)
}
# H0: Ux - Uy = 0
# H1: Ux - Uy != 0
{
x <- rnorm(100000, 0.01)
t.test(x, mu = 0)
}
# H0: Ux - Uy = 0
# H1: Ux - Uy != 0
{
x <- rnorm(10000, 0.01)
t.test(x, mu = 0)
}
formula(modelo)
summary(datos)
summary(modelo)
modelo$coefficients %*% matrix(c(1, 500, 2000, 50))
modelo$coefficients %*% matrix(c(1, 500, 2000, 50), ncol = 1)
matrix(c(1, 500, 2000, 50), ncol = 1)
matrix(modelo$coefficients, nrow = 1) %*% matrix(c(1, 500, 2000, 50), ncol = 1)
matrix(modelo$coefficients, nrow = 1
matrix(modelo$coefficients, nrow = 1)
matrix(modelo$coefficients, nrow = 1)
matrix(c(1, 500, 2000, 50), ncol = 1)
matrix(modelo$coefficients, nrow = 1) %*% matrix(c(1, 500, 2000, 50, 100), ncol = 1)
matrix(modelo$coefficients, nrow = 1) %*% matrix(c(1, 500, 2000, 50, 100), ncol = 1)
matrix(modelo$coefficients, nrow = 1) %*% matrix(c(1, 500, 2000, 50, 100), ncol = 1)
matrix(modelo$coefficients, nrow = 1)
summary(modelo)$coefficients
matrix(modelo$coefficients, nrow = 1)
matrix(modelo$coefficients, nrow = 1) %*% matrix(c(1, 500, 2000, 50, 100), ncol = 1)
# --------------------------------------Bibliotecas------------------------------------
{
library(ggplot2, warn.conflicts = FALSE)
library(ggthemes, warn.conflicts = FALSE)
library(GGally, warn.conflicts = FALSE)
library(dplyr, warn.conflicts = FALSE)
library(gridExtra, warn.conflicts = FALSE)
library(extrafont, warn.conflicts = FALSE)
library(corrplot, warn.conflicts = FALSE)
library(ggcorrplot, warn.conflicts = FALSE)
library(car, warn.conflicts = FALSE)
}
datos <- as.data.frame(state.x77)
datos <- rename(habitantes = Population, analfabetismo = Illiteracy,
ingresos = Income, esp_vida = `Life Exp`, asesinatos = Murder,
universitarios = `HS Grad`, heladas = Frost, area = Area,
.data = datos)
ggpairs(datos,
low = list(continuous = wrap("smooth", alpha = .6)), axisLabels = "none",
diag = list(continuous = "densityDiag")) +
theme_few() +
theme(plot.title = element_text(hjust = .5),
plot.subtitle = element_text(hjust = .5),
text = element_text(family = "Rekha")) +
ggtitle("Prueba GGaly", "Esto es un subtitulo") +
scale_color_brewer(palette = "Dark2")
modelo <- lm(esp_vida ~ habitantes + ingresos + analfabetismo + asesinatos + universitarios +
heladas + area, datos)
modelo <- lm(esp_vida ~ habitantes + ingresos + analfabetismo + asesinatos + universitarios +
heladas + area, datos)
summary(modelo)
summary(modelo)
step(modelo, trace = 1)
modelo <- lm(formula = esp_vida ~ habitantes + asesinatos + universitarios +
heladas, data = datos)
summary(modelo)
datos <- data.frame(datos, "residuos" = modelo$residuals)
formato_titulo <- function(string) {
string <- tolower(string)
substr(string, 1, 1) <- toupper(substr(string, 1, 1))
return(string)
}
scatterplot_residuos <- function(nombre_var, is_ic = TRUE){
ggplot(datos, aes_string(tolower(nombre_var), "residuos")) +
geom_point() +
geom_hline(yintercept = 0, color = "black", linetype = "dashed") +
geom_smooth(color = "firebrick", se = is_ic) +
theme_gdocs() +
ylab("Residuos") +
xlab(formato_titulo(nombre_var)) +
ggtitle(paste("Relación lineal con", formato_titulo(nombre_var))) +
theme(plot.title = element_text(hjust = 0.5, size = 20, color = "black"),
axis.title = element_text(size = 15, color = "black"),
text = element_text(family = "Bookman Old Style"))
}
g1 <- scatterplot_residuos("habitantes")
g2 <- scatterplot_residuos("asesinatos")
g3 <- scatterplot_residuos("universitarios")
g4 <- scatterplot_residuos("heladas")
grid.arrange(g1, g2, g3, g4, nrow = 2)
ggplot(datos, aes(sample = residuos)) +
geom_qq(color = "darkblue") +
geom_qq_line() +
theme_minimal() +
xlab("Theoretical") +
ylab("Sample") +
ggtitle("QQplot residuos") +
theme(plot.title = element_text(hjust = .5, size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Rockwell"))
calcular_bins <- function(n) 1 + 3.33 * log10(n)
ggplot(datos, aes(residuos)) +
geom_histogram(bins = calcular_bins(nrow(datos)), fill = "white", color = "firebrick") +
theme_gdocs() +
xlab("Residuos") +
ylab("") +
ggtitle("Histograma de residuos") +
theme(plot.title = element_text(hjust = .5, color = "black", size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Poor Richard"))
ggplot(datos, aes(sample = residuos)) +
geom_qq(color = "darkblue") +
geom_qq_line() +
theme_minimal() +
xlab("Theoretical") +
ylab("Sample") +
ggtitle("QQplot residuos") +
theme(plot.title = element_text(hjust = .5, size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Rockwell"))
calcular_bins <- function(n) 1 + 3.33 * log10(n)
ggplot(datos, aes(residuos)) +
geom_histogram(bins = calcular_bins(nrow(datos)), fill = "white", color = "firebrick") +
theme_gdocs() +
xlab("Residuos") +
ylab("") +
ggtitle("Histograma de residuos") +
theme(plot.title = element_text(hjust = .5, color = "black", size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Poor Richard"))
shapiro.test(datos$residuos)
datos <- data.frame(datos, "valores_ajustados" = modelo$fitted.values)
scatterplot_residuos("valores_ajustados", is_ic = FALSE)
ggcorrplot(cor(datos[, c("habitantes", "asesinatos", "universitarios", "heladas")], method = "pearson"),
ggtheme = theme_bw,
hc.order = TRUE,
lab = TRUE,
lab_size = 6,
type = "lower",
colors = c("#ff0084", "#ededed", "#e73827"))
vif(modelo)
dwt(modelo, alternative = "two.sided")
datos <- data.frame(datos, "s_residuos" = rstudent(modelo))
ggplot(datos, aes(valores_ajustados, abs(s_residuos))) +
geom_point(size = 1.5) +
geom_point(data = datos[abs(datos$s_residuos) > 3,], color = "firebrick") +
geom_hline(yintercept = 3, linetype = "dashed") +
theme_gdocs() +
ylab("Residuos studintized") +
xlab("Valores ajustados") +
ggtitle("Análisis de outliers") +
theme(plot.title = element_text(color = "black", hjust = .5),
text = element_text(family = "Tw Cen MT"))
aux <- data.frame(summary(influence.measures(modelo)))
umbral_hat <- 2.5 * length(modelo$coefficients)  / nrow(datos)
aux %>%
filter(hat > umbral_hat)
indices <- which.names(c("California", "Nevada"), datos)
modelo_aux <- lm(esp_vida ~ habitantes + asesinatos + universitarios +
heladas , datos[-indices,])
summary(modelo_aux)
summary(modelo)$coefficients
summary(modelo_aux)
summary(modelo)$coefficients
summary(modelo)
indices <- which.names(c("California", "Nevada"), datos)
modelo_aux <- lm(esp_vida ~ habitantes + asesinatos + universitarios +
heladas , datos[-indices,])
summary(modelo_aux)
summary(modelo)
summary(modelo_aux)
summary(modelo)
summary(modelo_aux)
summary(modelo)
summary(modelo_aux)
summary(modelo)
datos <- as.data.frame(state.x77)
datos <- rename(habitantes = Population, analfabetismo = Illiteracy,
ingresos = Income, esp_vida = `Life Exp`, asesinatos = Murder,
universitarios = `HS Grad`, heladas = Frost, area = Area,
.data = datos)
datos <- as.data.frame(state.x77)
datos <- rename(habitantes = Population, analfabetismo = Illiteracy,
ingresos = Income, esp_vida = `Life Exp`, asesinatos = Murder,
universitarios = `HS Grad`, heladas = Frost, area = Area,
.data = datos)
ggpairs(datos,
low = list(continuous = wrap("smooth", alpha = .6)), axisLabels = "none",
diag = list(continuous = "densityDiag")) +
theme_few() +
theme(plot.title = element_text(hjust = .5),
plot.subtitle = element_text(hjust = .5),
text = element_text(family = "Rekha")) +
ggtitle("Prueba GGaly", "Esto es un subtitulo") +
scale_color_brewer(palette = "Dark2")
modelo <- lm(esp_vida ~ habitantes + ingresos + analfabetismo + asesinatos + universitarios +
heladas + area, datos)
summary(modelo)
summary(modelo)
step(modelo, trace = 1)
modelo <- lm(formula = esp_vida ~ habitantes + asesinatos + universitarios +
heladas, data = datos)
summary(modelo)
modelo <- lm(esp_vida ~ habitantes + ingresos + analfabetismo + asesinatos + universitarios +
heladas + area, datos)
summary(modelo)
modelo <- lm(formula = esp_vida ~ habitantes + asesinatos + universitarios +
heladas, data = datos)
summary(modelo)
datos <- data.frame(datos, "residuos" = modelo$residuals)
formato_titulo <- function(string) {
string <- tolower(string)
substr(string, 1, 1) <- toupper(substr(string, 1, 1))
return(string)
}
scatterplot_residuos <- function(nombre_var, is_ic = TRUE){
ggplot(datos, aes_string(tolower(nombre_var), "residuos")) +
geom_point() +
geom_hline(yintercept = 0, color = "black", linetype = "dashed") +
geom_smooth(color = "firebrick", se = is_ic) +
theme_gdocs() +
ylab("Residuos") +
xlab(formato_titulo(nombre_var)) +
ggtitle(paste("Relación lineal con", formato_titulo(nombre_var))) +
theme(plot.title = element_text(hjust = 0.5, size = 20, color = "black"),
axis.title = element_text(size = 15, color = "black"),
text = element_text(family = "Bookman Old Style"))
}
g1 <- scatterplot_residuos("habitantes")
g2 <- scatterplot_residuos("asesinatos")
g3 <- scatterplot_residuos("universitarios")
g4 <- scatterplot_residuos("heladas")
grid.arrange(g1, g2, g3, g4, nrow = 2)
scatterplot_residuos("valores_ajustados", is_ic = FALSE)
datos <- data.frame(datos, "valores_ajustados" = modelo$fitted.values)
scatterplot_residuos("valores_ajustados", is_ic = FALSE)
scatterplot_residuos <- function(nombre_var, is_ic = TRUE){
ggplot(datos, aes_string(tolower(nombre_var), "residuos")) +
geom_point() +
geom_hline(yintercept = 0, color = "black", linetype = "dashed") +
#geom_smooth(color = "firebrick", se = is_ic) +
theme_gdocs() +
ylab("Residuos") +
xlab(formato_titulo(nombre_var)) +
ggtitle(paste("Relación lineal con", formato_titulo(nombre_var))) +
theme(plot.title = element_text(hjust = 0.5, size = 20, color = "black"),
axis.title = element_text(size = 15, color = "black"),
text = element_text(family = "Bookman Old Style"))
}
scatterplot_residuos("valores_ajustados", is_ic = FALSE)
ggplot(datos, aes(sample = residuos)) +
geom_qq(color = "darkblue") +
geom_qq_line() +
theme_minimal() +
xlab("Theoretical") +
ylab("Sample") +
ggtitle("QQplot residuos") +
theme(plot.title = element_text(hjust = .5, size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Rockwell"))
calcular_bins <- function(n) 1 + 3.33 * log10(n)
ggplot(datos, aes(residuos)) +
geom_histogram(bins = calcular_bins(nrow(datos)), fill = "white", color = "firebrick") +
theme_gdocs() +
xlab("Residuos") +
ylab("") +
ggtitle("Histograma de residuos") +
theme(plot.title = element_text(hjust = .5, color = "black", size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Poor Richard"))
shapiro.test(datos$residuos)
calcular_bins <- function(n) 1 + 3.33 * log10(n)
calcular_bins(nrow(datos))
nrow(datos)
calcular_bins(nrow(datos))
ggplot(datos, aes(residuos)) +
geom_histogram(fill = "white", color = "firebrick") +
theme_gdocs() +
xlab("Residuos") +
ylab("") +
ggtitle("Histograma de residuos") +
theme(plot.title = element_text(hjust = .5, color = "black", size = 20),
axis.title = element_text(size = 15),
text = element_text(family = "Poor Richard"))
datos <- data.frame(datos, "valores_ajustados" = modelo$fitted.values)
scatterplot_residuos("valores_ajustados", is_ic = FALSE)
ggcorrplot(cor(datos[, c("habitantes", "asesinatos", "universitarios", "heladas")], method = "pearson"),
ggtheme = theme_bw,
hc.order = TRUE,
lab = TRUE,
lab_size = 6,
type = "lower",
colors = c("#ff0084", "#ededed", "#e73827"))
vif(modelo)
dwt(modelo, alternative = "two.sided")
?dwt
datos <- data.frame(datos, "s_residuos" = rstudent(modelo))
ggplot(datos, aes(valores_ajustados, abs(s_residuos))) +
geom_point(size = 1.5) +
geom_point(data = datos[abs(datos$s_residuos) > 3,], color = "firebrick") +
geom_hline(yintercept = 3, linetype = "dashed") +
theme_gdocs() +
ylab("Residuos studintized") +
xlab("Valores ajustados") +
ggtitle("Análisis de outliers") +
theme(plot.title = element_text(color = "black", hjust = .5),
text = element_text(family = "Tw Cen MT"))
aux <- data.frame(summary(influence.measures(modelo)))
aux <- data.frame(summary(influence.measures(modelo)))
umbral_hat <- 2.5 * length(modelo$coefficients)  / nrow(datos)
aux %>%
filter(hat > umbral_hat)
indices <- which.names(c("California", "Nevada"), datos)
modelo_aux <- lm(esp_vida ~ habitantes + asesinatos + universitarios +
heladas , datos[-indices,])
summary(modelo_aux)
