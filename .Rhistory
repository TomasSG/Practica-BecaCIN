ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
theme(legend.title = element_text("asdsa"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
theme(legend.title = element_text("asdsa"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))# +
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))# +
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))# +
tipos_lineas <- c("Sensitividad" = "k", "Especificidad" = "d")
color <- c("Sensitividad" = "darkblue", "Especificidad" = "firebrick")
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
df_grafico <- data.frame(valor_corte = df_valores_corte$valor_corte,
sensitividad =df_valores_corte$sensitividad,
curva = "Sensitividad")
df_grafico
df_grafico <- cbind(df_grafico, data.frame(valor_corte = df_valores_corte$valor_corte,
especificidad =df_valores_corte$especificidad,
curva = "Especificidad"))
df_grafico
ggplot(df_grafico, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = curva, linetype = curva), size = 1.3) +
geom_line(aes(y = especificidad, color = curva, linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
ggplot(df_grafico, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = curva, linetype = curva), size = 1.3) +
geom_line(aes(y = especificidad, color = curva, linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
View(df_grafico)
df_grafico <- data.frame(valor_corte = df_valores_corte$valor_corte,
sensitividad =df_valores_corte$sensitividad,
curva = "Sensitividad")
df_grafico <- rbind(df_grafico, data.frame(valor_corte = df_valores_corte$valor_corte,
especificidad =df_valores_corte$especificidad,
curva = "Especificidad"))
df_grafico <- data.frame(valor_corte = df_valores_corte$valor_corte,
valor =df_valores_corte$sensitividad,
curva = "Sensitividad")
df_grafico <- rbind(df_grafico, data.frame(valor_corte = df_valores_corte$valor_corte,
valor =df_valores_corte$especificidad,
curva = "Especificidad"))
View(df_grafico)
ggplot(aes(x = valor_corte)) +
geom_line(df_grafico[curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(aes(x = valor_corte)) +
geom_line(df_grafico[curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico %>% filter(curva == "Sensitividad"), mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico %>% filter(curva == "Sensitividad"), mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico %>% filter(curva == "Especificidad"), mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
rm(df_grafico)
table(datos_it1$sexo)
tabla_clase <- table(datos_it1$clase)
tabla_sobrevivio <- table(datos_it1$sobrevivio)
tabla_sobrevivio <- table(datos_it1$sobrevivio)
tabla_clase <- table(datos_it1$clase)
tabla_sexo <- table(datos_it1$sexo)
tabla_puerto_embarcacion <- table(datos_it1$puerto_embarcacion)
tabla_puerto_nro_cabina <- table(datos_it1$nro_cabina)
tabla_puerto_nro_ticket <- table(datos_it1$ticket)
tabla_puerto_nro_ticket
modelo_it3
modelo_it3$deviance
(modelo_it3$null.deviance - modelo_it3$deviance) / modelo_it3$null.deviance
(modelo_it3$null.deviance / -2 - modelo_it3$deviance / -2) / (modelo_it3$null.deviance / -2)
(modelo_it3$null.deviance - modelo_it3$deviance) / modelo_it3$null.deviance
pchisq(2*(modelo_it3$deviance - modelo_it3$null.deviance), df = modelo_it3$df.residual - 1)
pchisq(2*(modelo_it3$deviance - modelo_it3$null.deviance), df = length(modelo_it3$coefficients) - 1)
class(modelo_it3$)
class(modelo_it3$)
class(modelo_it3)
?glm
return(c("pseudo_R2" = pseudo_R2, "p_valor" = p_valor))
calcular_pseudo_R2 <- function(modelo) {
# Usamos el McFadden pseudo R2
pseudo_R2 <- 1 -(modelo$deviance / modelo$null.deviance)
p_valor <- pchisq(2*(modelo$deviance - modelo$null.deviance), df = length(modelo$coefficients) - 1)
return(c("pseudo_R2" = pseudo_R2, "p_valor" = p_valor))
}
calcular_pseudo_R2(modelo_it3)
(modelo_it3$null.deviance - modelo_it3$deviance) / modelo_it3$null.deviance
calcular_pseudo_R2(modelo_it2)
calcular_pseudo_R2(modelo_it0)
calcular_pseudo_R2(modelo_it1)
modelo_it0 <- glm(sobrevivio ~ clase + sexo + edad + precio_ticket, data = datos_it1,
family = "binomial")
calcular_pseudo_R2(modelo_it0)
modelo_it1 <- glm(sobrevivio ~ clase + sexo + edad, data = datos_it1, family = "binomial")
calcular_pseudo_R2(modelo_it1)
modelo_it2 <- glm(sobrevivio ~ clase + sexo + edad + precio_ticket,
data = datos_it1[-indices_coincidentes,],
family = "binomial")
summary(modelo_it2)
modelo_it3 <- glm(formula = sobrevivio ~ clase + sexo + edad, family = "binomial",
data = datos_it1[-indices_coincidentes, ])
summary(modelo_it3)
calcular_pseudo_R2(modelo_it3)
summary(datos_it1)
modelo_it0 <- glm(sobrevivio ~ clase + sexo + edad + precio_ticket, data = datos_it1,
family = "binomial")
step(modelo_it0, direction = "both")
nrow(datos_it2)
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
# --------------------------------------Bibliotecas------------------------------------
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret) #confusionMatrix
library(car) #vif
library(ggthemes)
library(scales)
library(extrafont)
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages(c("kableExtra", "leaps", "MLmetrics"))
install.packages("knitr")
install.packages(c("generalhoslem", "vcd"))
install.packages("installr")
library(installr)
install.MikTeX()
library(knitr)
library(knitr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret) #confusionMatrix
library(car) #vif
library(ggthemes)
library(scales)
library(extrafont)
library(knitr)
opts_chunk$set(echo = TRUE)
source("./R/Utils.R")
# Bilbiotecas a usar
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret) #confusionMatrix
library(car) #vif
library(ggthemes)
library(scales)
library(extrafont)
library(knitr)
# Opciones en general
opts_chunk$set(echo = TRUE)
# Cargo funciones útiles
source("../R/Utils.R")
str(datos_it0)
str(datos_it0)
datos_it1 <- datos_it0 %>%
mutate(sobrevivio = factor(sobrevivio, levels = c(1, 0), labels = c("Sí", "No")),
clase = factor(clase, levels = c(1, 2, 3), labels = c("1ra", "2da", "3ra")),
sexo = factor(sexo, levels = c("male", "female"), labels = c("Hombre", "Mujer")),
nro_cabina = as.factor(nro_cabina),
ticket = as.factor(ticket),
puerto_embarcacion = as.factor(puerto_embarcacion))
str(datos_it1)
str(datos_it1)
kable(summary(datos_it1))
install.packages("shiny")
knit_with_parameters('C:/Users/tomas/OneDrive/Escritorio/ProyectosR/exer/PracticaInvestigacion/R Markdown/out.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/Users/tomas/OneDrive/Escritorio/ProyectosR/exer/PracticaInvestigacion/R Markdown/out.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/Users/tomas/OneDrive/Escritorio/ProyectosR/exer/PracticaInvestigacion/R Markdown/out.Rmd', encoding = 'UTF-8')
knit_with_parameters('C:/Users/tomas/OneDrive/Escritorio/ProyectosR/exer/PracticaInvestigacion/R Markdown/out.Rmd', encoding = 'UTF-8')
kable(datos_it1 %>% summarise_all(media = mean))
kable(datos_it1 %>% summarise_all(media = mean()))
?summarise_all
kable(datos_it1 %>% summarise_all(mean))
kable(datos_it1 %>% summarise_if(is.numeric, mean))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
kable(datos_it1 %>% summarise_if(is.numeric, list(media = mean))
kable(datos_it1 %>% summarise_if(is.numeric, list(media = mean)))
kable(datos_it1 %>% summarise_if(is.numeric, list("media" = mean)))
kable(datos_it1 %>% summarise_if(is.numeric, list("media" = mean, "sd" = sd)))
kable(datos_it1 %>% summarise_if(is.numeric, list(mean, sd)))
kable(datos_it1 %>% select(is.numeric())))
kable(datos_it1 %>% select(is.numeric()))
kable(datos_it1 %>% select(is.numeric))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
library(purrr)
kable(datos_it1 %>%
select(where(is.numeric)))
?mean
medidas_resumen <- function(data, remover_na = FALSE) {
data_frame_resultado <- data.frame(media = mean(data, na.rm = remover_na),
mediana = median(data, na.rm = remover_na),
primer_cuartil = quantile(data, probs = .25, na.rm = remover_na),
tercer_cuartil = quantile(data, probs = .75, na.rm = remover_na),
desvio = sd(data, na.rm = remover_na))
return(data_frame_resultado)
}
kable(datos_it1 %>%
select(where(is.numeric)) %>%
map_data(medidas_resumen))
kable(datos_it1 %>%
select(where(is.numeric)) %>%
map_dfr(medidas_resumen))
kable(datos_it1 %>%
select(where(is.numeric)) %>%
map_dfr(medidas_resumen, remover_na = TRUE))
data_frame_resultado <- data.frame(media = mean(data, na.rm = remover_na),
mediana = median(data, na.rm = remover_na),
primer_cuartil = quantile(data, probs = .25, na.rm = remover_na),
tercer_cuartil = quantile(data, probs = .75, na.rm = remover_na),
desvio = sd(data, na.rm = remover_na),
row.names = names(data))
medidas_resumen <- function(data, remover_na = FALSE) {
data_frame_resultado <- data.frame(media = mean(data, na.rm = remover_na),
mediana = median(data, na.rm = remover_na),
primer_cuartil = quantile(data, probs = .25, na.rm = remover_na),
tercer_cuartil = quantile(data, probs = .75, na.rm = remover_na),
desvio = sd(data, na.rm = remover_na),
row.names = names(data))
return(data_frame_resultado)
}
kable(datos_it1 %>%
select(where(is.numeric)) %>%
map_dfr(medidas_resumen, remover_na = TRUE))
medidas_resumen <- function(data, remover_na = FALSE) {
data_frame_resultado <- data.frame(media = mean(data, na.rm = remover_na),
mediana = median(data, na.rm = remover_na),
primer_cuartil = quantile(data, probs = .25, na.rm = remover_na),
tercer_cuartil = quantile(data, probs = .75, na.rm = remover_na),
desvio = sd(data, na.rm = remover_na),
row.names = names(data)[1])
return(data_frame_resultado)
}
kable(datos_it1 %>%
select(where(is.numeric)) %>%
map_dfr(medidas_resumen, remover_na = TRUE))
kable(datos_it1 %>%
select(where(is.numeric)) %>%
map_dfr(medidas_resumen))
