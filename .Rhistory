}
{
g0 <- ggplot(datos_it1, aes(x = sobrevivio, color = sobrevivio)) + xlab("")
g1 <- g0 + geom_boxplot(aes(y = precio_ticket)) +
ylab("Precio Ticket") +
scale_y_continuous(labels = label_number(prefix = "$"))
g2 <- g0 + geom_boxplot(aes(y = edad)) +
ylab("Edad")
arrange <- ggarrange(g1, g2, nrow = 1, ncol = 2, common.legend = TRUE, legend = "bottom")
annotate_figure(arrange,
top = text_grob("Variables Cuantitativas vs Sobrevivio", face = "bold", size = 20,
family = "Dubai Medium", hjust = .5))
}
g1 + coord_cartesian(ylim = c(0, 100)) +
ggtitle("Precio Ticket vs Sobrevivió (con zoom)") +
theme(legend.position =  "none") +
xlab("Sobrevivió")
valor_corte <- .43
predicciones <- ifelse(modelo_it1$fitted.values > valor_corte, 1, 0)
predicciones_factor <- factor(predicciones,
levels = c(1, 0),
labels = c("Si", "No"))
matriz_confusion <- confusionMatrix(predicciones_factor, datos_it1$sobrevivio)
predicciones <- ifelse(modelo_it1$fitted.values > valor_corte, 1, 0)
predicciones_factor <- factor(predicciones,
levels = c(1, 0),
labels = c("Sí", "No"))
matriz_confusion <- confusionMatrix(predicciones_factor, datos_it2$sobrevivio)
matriz_confusion
datos_it2$sobrevivio
predicciones_factor
datos_it2$sobrevivio
matriz_confusion <- confusionMatrix(predicciones_factor, datos_it1$sobrevivio)
matriz_confusion
tipos_lineas <- c("sensitividad_linea" = "k", "especificidad_linea" = "d")
color <- c("sensitividad_color" = "darkblue", "especificidad_color" = "firebrick")
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, linetype = "sensitividad_linea", color = "sensitividad_color")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, linetype = "sensitividad_linea", color = "sensitividad_color")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de COrte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, linetype = "sensitividad_linea", color = "sensitividad_color")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de COrte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, linetype = "sensitividad_linea", color = "sensitividad_color")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, linetype = "especificidad_linea", color = "especificidad_color"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
theme(legend.title = element_text("asdsa"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
theme(legend.title = element_text("asdsa"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
scale_linetype_manual(labels = c("Sensitividad", "Especificidad"),
values = c("k", "d"))
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))# +
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))# +
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))# +
tipos_lineas <- c("Sensitividad" = "k", "Especificidad" = "d")
color <- c("Sensitividad" = "darkblue", "Especificidad" = "firebrick")
ggplot(df_valores_corte, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = "sensitividad_color", linetype = "sensitividad_linea")
, color = "darkblue", size = 1.3) +
geom_line(aes(y = especificidad, color = "especificidad_color", linetype = "especificidad_linea"),
color = "firebrick", size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
df_grafico <- data.frame(valor_corte = df_valores_corte$valor_corte,
sensitividad =df_valores_corte$sensitividad,
curva = "Sensitividad")
df_grafico
df_grafico <- cbind(df_grafico, data.frame(valor_corte = df_valores_corte$valor_corte,
especificidad =df_valores_corte$especificidad,
curva = "Especificidad"))
df_grafico
ggplot(df_grafico, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = curva, linetype = curva), size = 1.3) +
geom_line(aes(y = especificidad, color = curva, linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1)) +
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
ggplot(df_grafico, aes(x = valor_corte)) +
geom_line(aes(y = sensitividad, color = curva, linetype = curva), size = 1.3) +
geom_line(aes(y = especificidad, color = curva, linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
View(df_grafico)
df_grafico <- data.frame(valor_corte = df_valores_corte$valor_corte,
sensitividad =df_valores_corte$sensitividad,
curva = "Sensitividad")
df_grafico <- rbind(df_grafico, data.frame(valor_corte = df_valores_corte$valor_corte,
especificidad =df_valores_corte$especificidad,
curva = "Especificidad"))
df_grafico <- data.frame(valor_corte = df_valores_corte$valor_corte,
valor =df_valores_corte$sensitividad,
curva = "Sensitividad")
df_grafico <- rbind(df_grafico, data.frame(valor_corte = df_valores_corte$valor_corte,
valor =df_valores_corte$especificidad,
curva = "Especificidad"))
View(df_grafico)
ggplot(aes(x = valor_corte)) +
geom_line(df_grafico[curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(aes(x = valor_corte)) +
geom_line(df_grafico[curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = sensitividad, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
labs(linetype = "Curva") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico[df_grafico$curva == "Sensitividad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico %>% filter(curva == "Sensitividad"), mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico[df_grafico$curva == "Especificidad",], mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
ggplot(mapping = aes(x = valor_corte)) +
geom_line(df_grafico %>% filter(curva == "Sensitividad"), mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
geom_line(df_grafico %>% filter(curva == "Especificidad"), mapping =  aes(y = valor, color = curva,
linetype = curva), size = 1.3) +
xlab("Valor de Corte") +
ylab("") +
ggtitle("Análisis de Posibles Valores de Corte") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(breaks = seq(0, 1, .1))
rm(df_grafico)
table(datos_it1$sexo)
tabla_clase <- table(datos_it1$clase)
tabla_sobrevivio <- table(datos_it1$sobrevivio)
tabla_sobrevivio <- table(datos_it1$sobrevivio)
tabla_clase <- table(datos_it1$clase)
tabla_sexo <- table(datos_it1$sexo)
tabla_puerto_embarcacion <- table(datos_it1$puerto_embarcacion)
tabla_puerto_nro_cabina <- table(datos_it1$nro_cabina)
tabla_puerto_nro_ticket <- table(datos_it1$ticket)
tabla_puerto_nro_ticket
modelo_it3
modelo_it3$deviance
(modelo_it3$null.deviance - modelo_it3$deviance) / modelo_it3$null.deviance
(modelo_it3$null.deviance / -2 - modelo_it3$deviance / -2) / (modelo_it3$null.deviance / -2)
(modelo_it3$null.deviance - modelo_it3$deviance) / modelo_it3$null.deviance
pchisq(2*(modelo_it3$deviance - modelo_it3$null.deviance), df = modelo_it3$df.residual - 1)
pchisq(2*(modelo_it3$deviance - modelo_it3$null.deviance), df = length(modelo_it3$coefficients) - 1)
class(modelo_it3$)
class(modelo_it3$)
class(modelo_it3)
?glm
return(c("pseudo_R2" = pseudo_R2, "p_valor" = p_valor))
calcular_pseudo_R2 <- function(modelo) {
# Usamos el McFadden pseudo R2
pseudo_R2 <- 1 -(modelo$deviance / modelo$null.deviance)
p_valor <- pchisq(2*(modelo$deviance - modelo$null.deviance), df = length(modelo$coefficients) - 1)
return(c("pseudo_R2" = pseudo_R2, "p_valor" = p_valor))
}
calcular_pseudo_R2(modelo_it3)
(modelo_it3$null.deviance - modelo_it3$deviance) / modelo_it3$null.deviance
calcular_pseudo_R2(modelo_it2)
calcular_pseudo_R2(modelo_it0)
calcular_pseudo_R2(modelo_it1)
modelo_it0 <- glm(sobrevivio ~ clase + sexo + edad + precio_ticket, data = datos_it1,
family = "binomial")
calcular_pseudo_R2(modelo_it0)
modelo_it1 <- glm(sobrevivio ~ clase + sexo + edad, data = datos_it1, family = "binomial")
calcular_pseudo_R2(modelo_it1)
modelo_it2 <- glm(sobrevivio ~ clase + sexo + edad + precio_ticket,
data = datos_it1[-indices_coincidentes,],
family = "binomial")
summary(modelo_it2)
modelo_it3 <- glm(formula = sobrevivio ~ clase + sexo + edad, family = "binomial",
data = datos_it1[-indices_coincidentes, ])
summary(modelo_it3)
calcular_pseudo_R2(modelo_it3)
summary(datos_it1)
modelo_it0 <- glm(sobrevivio ~ clase + sexo + edad + precio_ticket, data = datos_it1,
family = "binomial")
step(modelo_it0, direction = "both")
nrow(datos_it2)
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
# --------------------------------------Bibliotecas------------------------------------
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret) #confusionMatrix
library(car) #vif
library(ggthemes)
library(scales)
library(extrafont)
ggplot(df_valores_corte, aes(valor_corte, accuracy)) + geom_line()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages(c("kableExtra", "leaps", "MLmetrics"))
install.packages("knitr")
install.packages(c("generalhoslem", "vcd"))
